name: Build, Push to ECR & Deploy to ECS Fargate

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  AWS_OIDC_ROLE_ARN: arn:aws:iam::511097557993:role/GitHubActionsRole
  AWS_REGION: us-east-1
  APP_NAME: hello-fargate

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Terraform Apply
        working-directory: terraform
        run: |
          terraform apply -auto-approve -input=false -var "aws_region=${{ env.AWS_REGION }}" -var "app_name=${{ env.APP_NAME }}"

      - name: Get Terraform outputs
        id: tfout
        working-directory: terraform
        run: |
          echo "ecr_url=$(terraform output -raw ecr_repository_url)" >> $GITHUB_OUTPUT
          echo "alb_dns=$(terraform output -raw alb_dns_name)" >> $GITHUB_OUTPUT
          echo "cluster=$(terraform output -raw cluster_name)" >> $GITHUB_OUTPUT
          echo "service=$(terraform output -raw service_name)" >> $GITHUB_OUTPUT

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ steps.tfout.outputs.ecr_url }}:latest .
      
      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.tfout.outputs.ecr_url }}:latest
      
      - name: Force new deployment on ECS service
        run: |
          aws ecs update-service \
          --cluster "${{ steps.tfout.outputs.cluster }}" \
          --service "${{ steps.tfout.outputs.service }}" \
          --force-new-deployment >/dev/null
      
      - name: Show ALB URL
        run: |
          echo "App will be available at: http://${{ steps.tfout.outputs.alb_dns }}"
